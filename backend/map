Backend Summary
Models
User Model

Schema:
googleId (String, required, unique)
name (String, required)
email (String, required, unique)
profilePhotoUrl (String)
blockedUsers (Array of User references)
Includes timestamps
File: User.js
Message Model

Schema:
senderId (ObjectId, references User, required)
text (String, required)
timestamp (Date, default: Date.now)
conversationId (ObjectId, references Conversation, required)
File: Message.js
Conversation Model

Schema:
participants (Array of ObjectIds, references User, required)
participantNames (Array of Strings, required)
messages (Array of ObjectIds, references Message)
createdAt (Date, default: Date.now)
File: Conversation.js
Routes
Authentication Routes (/auth)

Endpoints:
GET /google: Initiates Google OAuth2.0 authentication
GET /google/callback: Handles callback from Google OAuth2.0
GET /login/failure: Handles login failure
GET /logout: Logs out the user
GET /check: Checks if the user is authenticated
File: authRoutes.js
User Routes (/users)

Endpoints:
GET /: Fetches all users
POST /block: Blocks a user
POST /unblock: Unblocks a user
File: userRoutes.js
Message Routes (/messages)

Endpoints:
POST /: Sends a message
GET /:conversationId: Fetches messages for a specific conversation
File: messageRoutes.js
Conversation Routes (/conversations)

Endpoints:
GET /: Fetches all conversations for a user with the last message details
POST /: Creates a new conversation
GET /earlier: Fetches all conversations with earlier messages
DELETE /:id: Deletes a conversation by ID
File: conversationsRoutes.js
Middleware
isAuthenticated.js: Checks if the user is authenticated
File: isAuthenticated.js
Socket Initialization
Socket Events:
joinConversation: Joins a conversation
leaveConversation: Leaves a conversation
newMessage: Sends a new message
disconnect: Handles user disconnection
File: socket.js
Database Connection
mongoose.setup.js: Connects to MongoDB using Mongoose
File: mongoose.setup.js
Passport Configuration
passport-setup.js: Sets up Google OAuth2.0 with Passport
File: passport-setup.js
Frontend Integration
User Model
User ID: googleId
User Info: name, email, profilePhotoUrl
Conversation Model
Conversation ID: _id
Participants: participants, participantNames
Messages: messages
Message Model
Message ID: _id
Sender Info: senderId (populated with name, profilePhotoUrl)
Content: text
Timestamp: timestamp
Conversation ID: conversationId
API Endpoints
User Authentication

GET /auth/google
GET /auth/google/callback
GET /auth/login/failure
GET /auth/logout
GET /auth/check
User Management

GET /users
POST /users/block
POST /users/unblock
Messages

POST /messages
GET /messages/:conversationId
Conversations

GET /conversations
POST /conversations
GET /conversations/earlier
DELETE /conversations/:id
WebSocket Events
Join a Conversation: joinConversation
Leave a Conversation: leaveConversation
New Message: newMessage
User Disconnected: disconnect