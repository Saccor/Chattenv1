
Backend Map Summary:
Database Setup:

mongoose.setup.js: Connects to MongoDB using Mongoose.
Models:

User: Stores user details (Google ID, name, email, profile photo URL).
Message: Stores messages (sender ID, text, timestamp, conversation ID).
Conversation: Stores conversations (participants, participant names, message references, timestamps).
Authentication:

passport-setup.js: Google OAuth for user authentication.
isAuthenticated.js: Middleware to check if a user is authenticated.
Routes:

authRoutes.js: Handles Google login, logout, and authentication check.
userRoutes.js: Fetch all users, protected by authentication.
messageRoutes.js: Send and fetch messages for a conversation, protected by authentication.
conversationsRoutes.js: Fetch and create conversations, includes participant names and last message details, protected by authentication.
Real-time Communication:

socket.js: Manages Socket.IO connections, joins/leaves conversations, sends/receives messages.
Server Setup:

server.js: Configures Express, session handling, CORS, connects to MongoDB, initializes routes and Socket.IO.
Key IDs and Fields:
User: _id, googleId, name, email, profilePhotoUrl
Message: _id, senderId, text, timestamp, conversationId
Conversation: _id, participants, participantNames, messages, createdAt